from google_play_scraper import reviews
import csv
import pandas as pd
from textblob import TextBlob
import matplotlib.pyplot as plt
import seaborn as sns

# Step 1: Function to fetch reviews with pagination
def fetch_reviews(app_id, count=100):
    all_reviews = []
    continuation_token = None

    while len(all_reviews) < count:
        review_list, continuation_token = reviews(
            app_id,
            count=min(100, count - len(all_reviews)),  # Fetch up to 100 reviews at a time
            continuation_token=continuation_token
        )
        all_reviews.extend(review_list)

        # Stop if no more reviews are available
        if not continuation_token:
            break

    return all_reviews

# Step 2: Fetch Reviews
review_list = fetch_reviews('com.tinder', count=500)  # Fetch 500 reviews

# Step 3: Save Reviews to CSV
csv_filename = 'tinder_reviews.csv'

# If file doesn't exist, create and write the header
file_exists = False
try:
    with open(csv_filename, 'r', newline='', encoding='utf-8') as file:
        file_exists = True
except FileNotFoundError:
    pass

# Save reviews into a CSV file
with open(csv_filename, 'a', newline='', encoding='utf-8') as file:
    writer = csv.writer(file)
    
    # Write header only if the file is new (not existing)
    if not file_exists:
        writer.writerow(["User Name", "Review", "Rating"])

    # Append the reviews data
    if review_list:
        for review in review_list:
            writer.writerow([review['userName'], review['content'], review['score']])
    else:
        print("No reviews were fetched.")

# Step 4: Load Reviews into DataFrame
df = pd.read_csv(csv_filename)

# Step 5: Sentiment Analysis Function
def get_sentiment(text):
    analysis = TextBlob(text)
    polarity = analysis.sentiment.polarity
    if polarity > 0:
        return 'positive'
    elif polarity < 0:
        return 'negative'
    else:
        return 'neutral'

# Step 6: Apply Sentiment Analysis
df['sentiment'] = df['Review'].apply(get_sentiment)

# Step 7: Save Reviews with Sentiment to a New CSV
df.to_csv('tinder_reviews_with_sentiment.csv', index=False)

# Step 8: Visualize Sentiment Distribution
plt.figure(figsize=(8, 6))
sns.countplot(data=df, x='sentiment', palette='Set2')
plt.title('Sentiment Distribution of Tinder Reviews')
plt.xlabel('Sentiment')
plt.ylabel('Number of Reviews')
plt.show()

# Print the first few rows of the DataFrame with sentiment
print(df[['User Name', 'Review', 'sentiment']].head())
